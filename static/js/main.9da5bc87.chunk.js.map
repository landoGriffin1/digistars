{"version":3,"sources":["Components/TeamSelector/TeamSelector.js","Components/TimeLine/TimeLine.js","State/Reducer.js","State/State.js","Components/Modal/Modal.js","Data/Interupts.js","Components/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["TeamSelector","props","useState","totalCost","setTotalCost","totalProd","setTotalProd","useEffect","updateValues","newTotalProd","newCost","workLoad","renderTeam","count","team","i","push","key","className","label","map","type","cost","productivity","experience","onClick","teamData","removeMember","addMember","days","TimeLine","totalDays","setTotalDays","projectLength","setProjectLength","getWidth","teams","find","id","isFinite","length","dayWidth","style","width","currentDay","renderDays","Reducer","state","action","newCurrentTeams","current","payload","role","amnt","newProjectWorkLoad","project","toLowerCase","teamProfile","t","Math","ceil","active","goodToGo","day","newArr","JSON","parse","stringify","phases","interupt","newHappiness","clientHappiness","newPLength","Error","InitialState","name","color","budget","ux","vd","e","client","happiness","fussiness","started","daysCompleted","junior","senior","MyModal","heading","onRequestClose","Modal","show","dialogClassName","onHide","centered","aria-labelledby","Header","Title","Body","copy","Footer","btns","btn","processResult","result","renderButtons","Interupts","init","initalState","Game","useReducer","dispatch","teamCount","setTeamCount","teamCost","setTeamCost","showModal","setShowModal","member","calcRemainingPeople","calcTeamCost","c","r","checkPhase","dayCount","canStart","hasTime","checkInterupt","chanceOfInterupt","floor","random","showInterupt","chooseInterupt","updateEstimate","setTimeout","checkStart","closeModal","setClientHappiness","gameOver","alert","currentTeam","background","csTeam","csScore","console","log","msg","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9da5bc87.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './TeamSelector.scss';\n\nimport { FaUserAlt } from 'react-icons/fa';\nimport { FiPlus, FiMinus } from 'react-icons/fi';\n\nfunction TeamSelector(props) {\n  const [totalCost, setTotalCost] = useState(0);\n  const [totalProd, setTotalProd] = useState(0);\n\n  useEffect(() => {}, [props]);\n\n  const addMember = type => {\n    const newCost = totalCost + type.cost;\n\n    const newTotalProd = totalProd + type.productivity;\n\n    updateValues(newTotalProd, newCost);\n\n    props.addMember(props.type, type, newCost);\n  };\n\n  const removeMember = type => {\n    const currentCount = props.teamData.count[type.type];\n    if (currentCount == 0) {\n      return;\n    }\n\n    const newCost = totalCost - type.cost;\n    const newTotalProd = totalProd - type.productivity;\n\n    updateValues(newTotalProd, newCost);\n\n    props.removeMember(props.type, type, newCost);\n  };\n\n  const updateValues = (newTotalProd, newCost) => {\n    setTotalCost(newCost);\n    if (props.workLoad) {\n      setTotalProd(newTotalProd);\n    }\n  };\n\n  const renderTypes = () => {\n    let types = props.team.map(type => {\n      return (\n        <div className=\"type\" key={type.type}>\n          <p className=\"label\">\n            <strong>{type.type}</strong>\n            <br />\n            Cost: {type.cost} |\n            {type.productivity\n              ? ` Productivity: ${type.productivity} units per day`\n              : ` Experience: ${type.experience} years`}\n          </p>\n          <div className=\"row\">\n            <button\n              className=\"remove\"\n              onClick={() => {\n                removeMember(type);\n              }}\n            >\n              <FiMinus />\n            </button>\n            <ul>{renderTeam(props.teamData.count[type.type])}</ul>\n            <button\n              className=\"add\"\n              onClick={() => {\n                addMember(type);\n              }}\n            >\n              <FiPlus />\n            </button>\n          </div>\n        </div>\n      );\n    });\n\n    return types;\n  };\n\n  const renderTeam = count => {\n    let team = [];\n    for (let i = 0; i < count; i++) {\n      team.push(\n        <li key={i}>\n          <FaUserAlt />\n        </li>\n      );\n    }\n\n    return team;\n  };\n\n  return (\n    <div className=\"team_selector\">\n      <h3 className=\"h6 header\">{props.label}</h3>\n\n      <div className=\"types\">\n        {renderTypes()}\n        <br />\n        <h6>Total Prod per day: {totalProd}</h6>\n        <h6>Total Cost: {totalCost}</h6>\n        <h6>Days to do work: {props.teamData.days}</h6>\n        <br />\n      </div>\n    </div>\n  );\n}\n\nexport default TeamSelector;\n","import React, { useEffect, useState } from 'react';\nimport './TimeLine.scss';\n\nfunction TimeLine(props) {\n  const [totalDays, setTotalDays] = useState();\n  const [projectLength, setProjectLength] = useState();\n\n  const getWidth = type => {\n    const team = props.teams.find(team => team.id === type);\n    let width;\n    if (isFinite(team.days)) {\n      width = (team.days / totalDays) * 100 + '%';\n    } else {\n      width = 0;\n    }\n    return width;\n  };\n\n  useEffect(() => {\n    let days = 0;\n    for (var i = 0; i < props.teams.length; i++) {\n      days += props.teams[i].days;\n    }\n\n    setProjectLength(days);\n\n    if (days < props.projectLength) {\n      days = props.projectLength;\n    }\n\n    //console.log(days);\n\n    setTotalDays(days);\n  }, [props]);\n\n  const renderDays = () => {\n    const dayWidth = 100 / totalDays;\n    const days = [];\n    for (var i = 0; i < totalDays; i++) {\n      days.push(\n        <span\n          key={i}\n          style={{\n            width: dayWidth + '%'\n          }}\n          className={`${\n            i === props.currentDay && i < projectLength ? 'current' : ''\n          }`}\n        >\n          {i}\n        </span>\n      );\n    }\n    days.push(\n      <span key={'last'} className=\"last\" style={{ width: dayWidth + '%' }}>\n        {totalDays}\n      </span>\n    );\n    return days;\n  };\n\n  return (\n    <div className=\"times\">\n      <div className=\"days\">{renderDays()}</div>\n      <div className=\"bars\">\n        <div className=\"ux\" style={{ width: getWidth('UX') }}>\n          <span className=\"label\">UX</span>\n        </div>\n        <div className=\"vd\" style={{ width: getWidth('VD') }}>\n          <span className=\"label\">VD</span>\n        </div>\n        <div className=\"eng\" style={{ width: getWidth('E') }}>\n          <span className=\"label\">E</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeLine;\n","const Reducer = (state, action) => {\r\n  let newCurrentTeams;\r\n  switch (action.type) {\r\n    case 'updateTeamMember':\r\n      newCurrentTeams = state.current.teams.map(team => {\r\n        if (team.id === action.payload.team) {\r\n          team.count[action.payload.role] =\r\n            team.count[action.payload.role] + action.payload.amnt;\r\n          team.cost = action.payload.cost;\r\n        }\r\n        return team;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          teams: newCurrentTeams\r\n        }\r\n      };\r\n\r\n    case 'updateEstimate':\r\n      const newProjectWorkLoad =\r\n        state.project.workLoad[action.payload.team] + action.payload.amnt;\r\n      if (newProjectWorkLoad >= 0) {\r\n        return {\r\n          ...state,\r\n          project: {\r\n            ...state.project,\r\n            workLoad: {\r\n              ...state.project.workLoad,\r\n              [action.payload.team]: newProjectWorkLoad\r\n            }\r\n          }\r\n        };\r\n      }\r\n      return state;\r\n\r\n    case 'updateDays':\r\n      newCurrentTeams = state.current.teams.map(team => {\r\n        if (team.id.toLowerCase() === action.payload.team.toLowerCase()) {\r\n          const workLoad = state.project.workLoad[team.id.toLowerCase()];\r\n\r\n          const teamProfile = state.teams.find(t => t.id === team.id)\r\n            .teamProfile;\r\n\r\n          let totalProd = 0;\r\n          for (var t of teamProfile) {\r\n            const count = team.count[t.type];\r\n            totalProd += t.productivity * count;\r\n          }\r\n          let days = 0;\r\n          if (totalProd > 0) {\r\n            days = Math.ceil(workLoad / totalProd);\r\n          }\r\n\r\n          team.days = days;\r\n        }\r\n        return team;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          teams: newCurrentTeams\r\n        }\r\n      };\r\n\r\n    case 'setCurrentData':\r\n      //const newPhases = Object.assign({}, state.current.phases);\r\n\r\n      /*for (var team of state.current.teams) {\r\n        newPhases[team.id.toLowerCase()].daysCompleted = team.days;\r\n      }*/\r\n\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          //phases: newPhases,\r\n          totalDays: action.payload.totalDays,\r\n          active: action.payload.goodToGo\r\n        }\r\n      };\r\n    case 'nextDay':\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          currentDay: action.payload.day\r\n        }\r\n      };\r\n    case 'setPhase':\r\n      let newArr = JSON.parse(JSON.stringify(state.current.phases));\r\n\r\n      const team = newArr.map(team =>\r\n        team.id === action.payload.team\r\n          ? (team.active = true)\r\n          : (team.active = false)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          currentDay: action.payload.currentDay,\r\n          phases: newArr\r\n        }\r\n      };\r\n    case 'setInterupt':\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          interupt: action.payload.interupt\r\n        }\r\n      };\r\n    case 'setClientHappiness':\r\n      const newHappiness = state.current.clientHappiness + action.payload.amnt;\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          clientHappiness: newHappiness\r\n        }\r\n      };\r\n    case 'setProjectLength':\r\n      const newPLength = state.project.length + action.payload.amnt;\r\n      return {\r\n        ...state,\r\n        project: {\r\n          ...state.project,\r\n          length: newPLength\r\n        }\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","const InitialState = {\r\n  teams: [\r\n    {\r\n      name: 'Client Services',\r\n      id: 'CS',\r\n      color: '#EEC0C6',\r\n      teamProfile: [\r\n        {\r\n          type: 'senior',\r\n          cost: 100,\r\n          experience: 7\r\n        },\r\n        {\r\n          type: 'junior',\r\n          cost: 50,\r\n          experience: 5\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'User Experience',\r\n      id: 'UX',\r\n      color: '#FFF07C',\r\n      teamProfile: [\r\n        {\r\n          type: 'senior',\r\n          cost: 100,\r\n          productivity: 5\r\n        },\r\n        {\r\n          type: 'junior',\r\n          cost: 50,\r\n          productivity: 3\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Visual Design',\r\n      id: 'VD',\r\n      color: '#80FF72',\r\n      teamProfile: [\r\n        {\r\n          type: 'senior',\r\n          cost: 100,\r\n          productivity: 5\r\n        },\r\n        {\r\n          type: 'junior',\r\n          cost: 50,\r\n          productivity: 3\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Engineering',\r\n      id: 'E',\r\n      color: '#7EE8FA',\r\n      teamProfile: [\r\n        {\r\n          type: 'senior',\r\n          cost: 100,\r\n          productivity: 5\r\n        },\r\n        {\r\n          type: 'junior',\r\n          cost: 50,\r\n          productivity: 3\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  project: {\r\n    length: 30,\r\n    budget: 1500,\r\n    workLoad: {\r\n      ux: 80,\r\n      vd: 100,\r\n      e: 150\r\n    },\r\n    client: {\r\n      happiness: 100,\r\n      fussiness: 50\r\n    }\r\n  },\r\n  current: {\r\n    currentDay: null,\r\n    totalDays: 0,\r\n    started: false,\r\n    clientHappiness: 100,\r\n    phases: [\r\n      { id: 'cs', active: false, daysCompleted: 0 },\r\n      { id: 'ux', active: false, daysCompleted: 0 },\r\n      { id: 'vd', active: false, daysCompleted: 0 },\r\n      { id: 'e', active: false, daysCompleted: 0 }\r\n    ],\r\n    interupt: {},\r\n    teams: [\r\n      {\r\n        name: 'Client Services',\r\n        id: 'CS',\r\n        count: {\r\n          junior: 0,\r\n          senior: 0\r\n        },\r\n        days: 0,\r\n        cost: 0\r\n      },\r\n      {\r\n        name: 'User Experience',\r\n        id: 'UX',\r\n        count: {\r\n          junior: 0,\r\n          senior: 0\r\n        },\r\n        days: 0,\r\n        cost: 0\r\n      },\r\n      {\r\n        name: 'Visual Design',\r\n        id: 'VD',\r\n        count: {\r\n          junior: 0,\r\n          senior: 0\r\n        },\r\n        days: 0,\r\n        cost: 0\r\n      },\r\n      {\r\n        name: 'Engineering',\r\n        id: 'E',\r\n        count: {\r\n          junior: 0,\r\n          senior: 0\r\n        },\r\n        days: 0,\r\n        cost: 0\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport default InitialState;\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport './Modal.scss';\r\n\r\nfunction MyModal(props) {\r\n  const { heading, onRequestClose, interupt } = props;\r\n\r\n  const hide = () => {\r\n    onRequestClose();\r\n  };\r\n\r\n  const renderButtons = () => {\r\n    if (interupt && interupt.btns) {\r\n      return interupt.btns.map(btn => {\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              props.processResult(btn.result);\r\n            }}\r\n          >\r\n            {btn.label}\r\n          </button>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      dialogClassName=\"modal-90w\"\r\n      onHide={() => false}\r\n      centered\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n          {heading}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>{interupt && interupt.copy}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>{renderButtons()}</Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MyModal;\r\n","const Interupts = {\r\n  ux: [\r\n    {\r\n      copy:\r\n        'Client doesnt think the current user experience is right, the UX team think this will add 20 to the estimates.',\r\n      btns: [\r\n        {\r\n          label: 'Accept the change and increase the estimates',\r\n          result: {\r\n            type: 'increaseEstimate',\r\n            amnt: 20,\r\n            team: 'ux'\r\n          }\r\n        },\r\n        {\r\n          label:\r\n            'Accept the change, increase the estimates and tell the client you are increasing the project length',\r\n          result: {\r\n            type: 'increaseEstimateAndPLength',\r\n            amnt: 20,\r\n            projectLength: 2,\r\n            team: 'ux'\r\n          }\r\n        },\r\n        {\r\n          label:\r\n            'Go back to the client and tell them you are leaving the user experience as it is!',\r\n          result: {\r\n            type: 'refuseClient'\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  vd: [\r\n    {\r\n      copy:\r\n        'Client doesnt think the Homepage Design is right, the Visual design team think this will add 5 to the estimates.',\r\n      btns: [\r\n        {\r\n          label: 'Accept the change and increase the estimates',\r\n          result: {\r\n            type: 'increaseEstimate',\r\n            amnt: 5,\r\n            team: 'vd'\r\n          }\r\n        },\r\n        {\r\n          label:\r\n            'Accept the change, increase the estimates and tell the client you are increasing the project length',\r\n          result: {\r\n            type: 'increaseEstimateAndPLength',\r\n            amnt: 5,\r\n            projectLength: 1,\r\n            team: 'vd'\r\n          }\r\n        },\r\n        {\r\n          label:\r\n            'Go back to the client and tell them you are leaving the user experience as it is!',\r\n          result: {\r\n            type: 'refuseClient'\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  e: [\r\n    {\r\n      copy: `You've discovered some extra complexity in the code that needs researching, the engineering team say it will add 10 to the estimates`,\r\n      btns: [\r\n        {\r\n          label: 'Do the extra research',\r\n          result: {\r\n            type: 'increaseEstimate',\r\n            amnt: 10,\r\n            team: 'e'\r\n          }\r\n        },\r\n        {\r\n          label: 'Do the extra research but add extra time to the project',\r\n          result: {\r\n            type: 'increaseEstimateAndPLength',\r\n            amnt: 10,\r\n            projectLength: 2,\r\n            team: 'e'\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\nexport default Interupts;\r\n","import React, { useState, useReducer } from 'react';\nimport './Game.scss';\nimport TeamSelector from '../TeamSelector/TeamSelector';\nimport TimeLine from '../TimeLine/TimeLine';\n\nimport Reducer from '../../State/Reducer';\nimport InitialState from '../../State/State';\n\nimport MyModal from '../Modal/Modal';\n\nimport Interupts from '../../Data/Interupts';\n\nfunction init(initalState) {\n  return initalState;\n}\n\nfunction Game() {\n  const [state, dispatch] = useReducer(Reducer, InitialState, init);\n\n  const teamMax = 99;\n  const [teamCount, setTeamCount] = useState(teamMax);\n  const [teamCost, setTeamCost] = useState(0);\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalCopy, setModalCopy] = useState('');\n\n  const addMember = (type, member, cost) => {\n    let r = teamCount - 1;\n    if (r < 0) {\n      return;\n    }\n\n    dispatch({\n      type: 'updateTeamMember',\n      payload: {\n        team: type,\n        role: member.type,\n        amnt: 1,\n        cost: cost\n      }\n    });\n\n    dispatch({\n      type: 'updateDays',\n      payload: {\n        team: type\n      }\n    });\n\n    calcRemainingPeople(-1);\n    calcTeamCost('add', member.cost);\n  };\n\n  const removeMember = (type, member, cost) => {\n    dispatch({\n      type: 'updateTeamMember',\n      payload: {\n        team: type,\n        role: member.type,\n        amnt: -1,\n        cost: cost\n      }\n    });\n\n    dispatch({\n      type: 'updateDays',\n      payload: {\n        team: type\n      }\n    });\n\n    calcRemainingPeople(1);\n    calcTeamCost('delete', member.cost);\n  };\n\n  const calcRemainingPeople = c => {\n    let r = teamCount + c;\n\n    if (r >= 0 && r <= teamMax) {\n      setTeamCount(r);\n    }\n  };\n\n  const calcTeamCost = (type, cost) => {\n    let newCost = teamCost;\n    if (type === 'add') {\n      newCost += cost;\n    }\n    if (type === 'delete') {\n      newCost -= cost;\n    }\n    setTeamCost(newCost);\n  };\n\n  const renderTeams = () => {\n    return state.teams.map(team => {\n      const workLoad = state.project.workLoad[team.id.toLowerCase()];\n      const teamData = state.current.teams.find(\n        currentTeam => currentTeam.id === team.id\n      );\n      return (\n        <div className=\"team\" key={team.id} style={{ background: team.color }}>\n          <TeamSelector\n            label={team.name}\n            type={team.id}\n            team={team.teamProfile}\n            teamData={teamData}\n            addMember={addMember}\n            removeMember={removeMember}\n            workLoad={workLoad}\n          ></TeamSelector>\n        </div>\n      );\n    });\n  };\n\n  const startPhase = () => {\n    if (state.current.active) {\n      return;\n    }\n\n    const checkStart = canStart();\n\n    //set project Stats state\n    dispatch({\n      type: 'setCurrentData',\n      payload: checkStart\n    });\n\n    const currentDay =\n      state.current.currentDay !== null ? state.current.currentDay : 0;\n\n    checkPhase(currentDay);\n\n    if (!checkStart.hasTime) {\n      alert('make sure you have at least one person in each team!');\n    }\n\n    if (checkStart.totalDays > state.project.length) {\n      alert('Project is going to overrun - please update staff to fix this!');\n    }\n  };\n\n  const checkPhase = currentDay => {\n    let dayCount = 0;\n\n    //loop through teams\n    for (let team of state.current.teams) {\n      if (team.days != 0) {\n        dayCount += team.days;\n        if (currentDay < dayCount) {\n          dispatch({\n            type: 'setPhase',\n            payload: {\n              team: team.id.toLowerCase(),\n              currentDay\n            }\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  const canStart = () => {\n    let totalDays = 0;\n    let hasTime = true;\n\n    for (var team of state.current.teams) {\n      //exclude cs\n      if (team.id.toLowerCase() !== 'cs') {\n        totalDays += team.days;\n        if (team.days === 0) {\n          hasTime = false;\n        }\n      }\n    }\n\n    let goodToGo = false;\n    if (totalDays <= state.project.length && hasTime) {\n      goodToGo = true;\n    }\n\n    return {\n      goodToGo,\n      totalDays,\n      hasTime\n    };\n  };\n\n  const nextDay = () => {\n    if (state.current.active) {\n      const day = state.current.currentDay + 1;\n\n      checkPhase(day);\n\n      dispatch({\n        type: 'nextDay',\n        payload: { day }\n      });\n\n      if (checkInterupt()) {\n        showInterupt();\n      }\n\n      if (day === state.current.totalDays) {\n        alert('congratulations - you have delivered the project on time');\n      }\n    } else {\n      alert('make sure the project isnt due to overrun');\n    }\n  };\n\n  const checkInterupt = () => {\n    const chanceOfInterupt = state.project.client.fussiness / 5;\n    const rand = Math.floor(Math.random() * 100);\n    if (rand <= chanceOfInterupt) {\n      return true;\n    }\n    return false;\n  };\n\n  const showInterupt = () => {\n    const team = state.current.phases.find(team => team.active === true).id;\n\n    const interupt = chooseInterupt(team);\n\n    dispatch({\n      type: 'setInterupt',\n      payload: {\n        interupt: interupt\n      }\n    });\n\n    setShowModal(true);\n  };\n\n  const chooseInterupt = team => {\n    const interupt =\n      Interupts[team][Math.floor(Math.random() * Interupts[team].length)];\n    return interupt;\n  };\n\n  const updateEstimate = (type, amnt) => {\n    dispatch({\n      type: 'updateEstimate',\n      payload: {\n        team: type,\n        amnt: amnt\n      }\n    });\n\n    dispatch({\n      type: 'updateDays',\n      payload: {\n        team: type\n      }\n    });\n\n    setTimeout(() => {\n      const checkStart = canStart();\n      dispatch({\n        type: 'setCurrentData',\n        payload: checkStart\n      });\n    }, 1);\n  };\n\n  const checkProjectLength = () => {\n    console.log(state.project.length);\n    console.log(state.current.totalDays);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const setClientHappiness = amnt => {\n    dispatch({\n      type: 'setClientHappiness',\n      payload: {\n        amnt\n      }\n    });\n  };\n\n  const setProjectLength = amnt => {\n    dispatch({\n      type: 'setProjectLength',\n      payload: {\n        amnt\n      }\n    });\n  };\n\n  const renderDebug = () => {\n    return state.current.phases.map(team => {\n      return (\n        <dl key={team.id}>\n          <dt>\n            <h3>{team.id}</h3>\n          </dt>\n          <dt>Active</dt>\n          <dd>{team.active ? 'true' : 'false'}</dd>\n          <dt>Days completed</dt>\n          <dd>{team.daysCompleted} </dd>\n          <dd>\n            <button\n              onClick={() => {\n                updateEstimate(team.id, 10);\n              }}\n            >\n              Estimate +10\n            </button>\n          </dd>\n          <dd>\n            <button\n              onClick={() => {\n                updateEstimate(team.id, -10);\n              }}\n            >\n              Estimate -10\n            </button>\n          </dd>\n        </dl>\n      );\n    });\n  };\n\n  const processResult = result => {\n    const csTeam = state.current.teams.find(team => (team.id = 'CS')).count;\n    const csPerc = ((csTeam.senior * 7 + csTeam.junior * 5) / 25) * 50;\n\n    const clientHappiness = state.current.clientHappiness / 2;\n\n    const csScore = csPerc + clientHappiness;\n    console.log('client score is:' + csScore);\n\n    if (result.type === 'increaseEstimate') {\n      updateEstimate(result.team, result.amnt);\n\n      //check total days\n      //if over project length then\n\n      closeModal();\n    } else if (result.type === 'increaseEstimateAndPLength') {\n      let msg = '';\n\n      if (csScore > 20) {\n        msg =\n          'Client accepts increase but is slightly unhappy with increase in project length';\n        setClientHappiness(-20);\n        setProjectLength(result.projectLength);\n        updateEstimate(result.team, result.amnt);\n      } else {\n        msg = 'This isnt good enough, the project is cancelled!';\n        gameOver();\n      }\n\n      alert(msg);\n      closeModal();\n\n      //updateProjectLength(result.projectLength)\n\n      //check total days\n      //if over project length then\n\n      closeModal();\n    } else if (result.type == 'refuseClient') {\n      //check client services and client fussiness\n\n      let msg = 'Client is sick of the team, the project is cancelled!';\n\n      if (csScore > 80) {\n        msg = 'Client accepts refusal but is slightly unhappy';\n        //client happiness - 20\n        setClientHappiness(-20);\n      } else if (csScore > 50) {\n        msg = 'Client accepts refusal but is a bit more unhappy';\n        //client happiness - 20\n        setClientHappiness(-20);\n      } else if (csScore > 30) {\n        msg = 'Client accepts refusal but is very unhappy';\n        //client happiness - 50\n        setClientHappiness(-50);\n      } else {\n        msg = 'This isnt good enough, the project is cancelled!';\n        gameOver();\n      }\n      alert(msg);\n      closeModal();\n    }\n  };\n\n  const gameOver = () => {\n    alert('gameover');\n  };\n\n  return (\n    <div className=\"game \">\n      <h1>Total Project Management</h1>\n      <div className=\"work section\">\n        <h2>Research the project</h2>\n        <div className=\"work-item\">\n          <h3>Project </h3>\n          <dl>\n            <dt>Client</dt>\n            <dd>Imaginary Inc.</dd>\n            <dt>Project length</dt>\n            <dd>{state.project.length} days</dd>\n            <dt>Budget</dt>\n            <dd>{state.project.budget}</dd>\n            <dt>Client Fussiness</dt>\n            <dd>{state.project.client.fussiness}</dd>\n          </dl>\n        </div>\n        <div className=\"work-item\">\n          <h3>Estimates</h3>\n          <dl>\n            <dt>User Experience</dt>\n            <dd>{state.project.workLoad.ux}</dd>\n            <dt>Visual Design</dt>\n            <dd>{state.project.workLoad.vd}</dd>\n            <dt>Engineering</dt>\n            <dd>{state.project.workLoad.e}</dd>\n          </dl>\n        </div>\n      </div>\n\n      <div className=\"people section\">\n        <h2>Choose your starting team</h2>\n        {/*<h3>Team members left: {teamCount}</h3>*/}\n        <div className=\"teams\">{renderTeams()}</div>\n        <br />\n        <h3>\n          Budget: {state.project.budget} | Cost: {teamCost} | Profit:\n          {Math.floor(100 - (teamCost / state.project.budget) * 100)}%\n        </h3>\n      </div>\n\n      <div className=\"timeline section\">\n        <h2>Timeline</h2>\n        <TimeLine\n          projectLength={state.project.length}\n          teams={state.current.teams}\n          currentDay={state.current.currentDay}\n        ></TimeLine>\n      </div>\n\n      <div className=\"debug section\">\n        <h2>Debug</h2>\n        {renderDebug()}\n        <dl>\n          <dt>\n            <h3>Stats</h3>\n          </dt>\n\n          <dt>Active</dt>\n          <dd>{state.current.active ? 'true' : 'false'}</dd>\n          <dt>Current Time</dt>\n          <dd>End of day {state.current.currentDay}</dd>\n          <dt>Total days</dt>\n          <dd>{state.current.totalDays}</dd>\n          <dt>Client happiness</dt>\n          <dd>{state.current.clientHappiness}</dd>\n        </dl>\n      </div>\n\n      <div className=\"start\">\n        <button onClick={startPhase}>Start</button>\n        <button onClick={nextDay}>Next day</button>\n      </div>\n\n      <MyModal\n        show={showModal}\n        heading={'Decision time...'}\n        interupt={state.current.interupt}\n        onRequestClose={closeModal}\n        processResult={processResult}\n      />\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.scss';\nimport Game from './Components/Game/Game';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game></Game>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}